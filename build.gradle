plugins {
    id "jacoco"
    id "idea"
    id "org.jetbrains.kotlin.jvm" version "1.2.50"
    id "org.jetbrains.kotlin.kapt" version "1.2.50"
}

group = 'io.openfuture'
version = '1.0.0'
sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}

dependencies {
    // Kotlin
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.2.50")

    // Tools
    compile("org.apache.httpcomponents:httpclient:4.5")

    // Jackson
    compile("com.fasterxml.jackson.core:jackson-databind:2.0.1")
    compile("com.fasterxml.jackson.module:jackson-module-kotlin:2.9.4.1")

    // Test
    compile("junit:junit:4.12")
    compile("org.assertj:assertj-core:3.10.0")
    compile("org.mockito:mockito-all:1.10.19")
    compile("org.powermock:powermock-mockito-release-full:1.6.4")
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

// Jacoco
jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    'io/openfuture/sdk/*Application*',
                    'io/openfuture/sdk/domain/**',
                    'io/openfuture/sdk/exception/**',
            ])
        })
    }
}
check.dependsOn jacocoTestReport